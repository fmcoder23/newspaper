// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String   @default(dbgenerated("gen_random_uuid()")) @map("id") @db.Uuid
  fullname   String   @map("fullname")
  username   String   @map("username")
  password   String   @map("password")
  created_at DateTime @default(now()) @map("created_at")
  isadmin    Boolean? @map("isadmin")

  @@id([id])
  @@unique([username])
  @@map("users")
}

model Authors {
  id       String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname String @map("fullname")

  newspapers News[]

  @@id([id])
  @@map("authors")
}

model News {
  id          String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String   @map("title")
  description String   @map("description")
  content     String   @map("content")
  image       String   @map("image")
  views       Int      @default(1) @map("views")
  viewers     String[] @default([]) @map("viewers")
  author_id   String   @map("author_id") @db.Uuid

  author Authors @relation(fields: [author_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("news")
}
